/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.92.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessToken', 'model/Account', 'model/AccountInterface', 'model/AccountList', 'model/AccountParams', 'model/AccountReference', 'model/BadCredentialsError', 'model/Bank', 'model/BankConnection', 'model/BankConnectionInterface', 'model/BankConnectionList', 'model/BankConnectionOwner', 'model/BankConsent', 'model/BankInterface', 'model/BankInterfaceLoginField', 'model/BankList', 'model/CashFlow', 'model/CashFlowList', 'model/CategorizationCheckResult', 'model/CategorizationCheckResults', 'model/Category', 'model/CategoryList', 'model/CategoryParams', 'model/ChangeClientCredentialsParams', 'model/CheckCategorizationData', 'model/CheckCategorizationTransactionData', 'model/ClearingAccountData', 'model/ClientConfiguration', 'model/ClientConfigurationParams', 'model/ConnectInterfaceParams', 'model/DailyBalance', 'model/DailyBalanceList', 'model/DirectDebitOrderingResponse', 'model/EditBankConnectionParams', 'model/EditCategoryParams', 'model/EditTppCredentialParams', 'model/ErrorDetails', 'model/ErrorMessage', 'model/ExecutePasswordChangeParams', 'model/ExecuteSepaDirectDebitParams', 'model/ExecuteSepaMoneyTransferParams', 'model/IbanRule', 'model/IbanRuleIdentifiersParams', 'model/IbanRuleList', 'model/IbanRuleParams', 'model/IbanRulesParams', 'model/IdentifierList', 'model/ImportBankConnectionParams', 'model/KeywordRule', 'model/KeywordRuleIdentifiersParams', 'model/KeywordRuleList', 'model/KeywordRuleParams', 'model/KeywordRulesParams', 'model/Label', 'model/LabelList', 'model/LabelParams', 'model/LoginCredential', 'model/LoginCredentialResource', 'model/MockAccountData', 'model/MockBankConnectionUpdate', 'model/MockBatchUpdateParams', 'model/MoneyTransferOrderingResponse', 'model/MonthlyUserStats', 'model/MultiStepAuthenticationCallback', 'model/MultiStepAuthenticationChallenge', 'model/NewTransaction', 'model/NotificationRule', 'model/NotificationRuleList', 'model/NotificationRuleParams', 'model/PageableBankList', 'model/PageableCategoryList', 'model/PageableIbanRuleList', 'model/PageableKeywordRuleList', 'model/PageableLabelList', 'model/PageablePaymentResources', 'model/PageableSecurityList', 'model/PageableTppAuthenticationGroupResources', 'model/PageableTppCertificateList', 'model/PageableTppCredentialResources', 'model/PageableTransactionList', 'model/PageableUserInfoList', 'model/Paging', 'model/PasswordChangingResource', 'model/Payment', 'model/PaymentExecutionResponse', 'model/PaypalTransactionData', 'model/RemoveInterfaceParams', 'model/RequestPasswordChangeParams', 'model/RequestSepaDirectDebitParams', 'model/RequestSepaMoneyTransferParams', 'model/Security', 'model/SecurityList', 'model/SingleDirectDebitData', 'model/SingleMoneyTransferRecipientData', 'model/SplitTransactionsParams', 'model/SubTransactionParams', 'model/TppAuthenticationGroup', 'model/TppCertificate', 'model/TppCertificateParams', 'model/TppCredentials', 'model/TppCredentialsParams', 'model/TrainCategorizationData', 'model/TrainCategorizationTransactionData', 'model/Transaction', 'model/TransactionList', 'model/TriggerCategorizationParams', 'model/TwoStepProcedure', 'model/UpdateBankConnectionParams', 'model/UpdateMultipleTransactionsParams', 'model/UpdateResult', 'model/UpdateTransactionsParams', 'model/User', 'model/UserCreateParams', 'model/UserIdentifiersList', 'model/UserIdentifiersParams', 'model/UserInfo', 'model/UserUpdateParams', 'model/VerificationStatusResource', 'model/WebForm', 'api/AccountsApi', 'api/AuthorizationApi', 'api/BankConnectionsApi', 'api/BanksApi', 'api/CategoriesApi', 'api/ClientConfigurationApi', 'api/LabelsApi', 'api/MandatorAdministrationApi', 'api/MocksAndTestsApi', 'api/NotificationRulesApi', 'api/PaymentsApi', 'api/SecuritiesApi', 'api/TPPCertificatesApi', 'api/TPPCredentialsApi', 'api/TransactionsApi', 'api/UsersApi', 'api/WebFormsApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccessToken'), require('./model/Account'), require('./model/AccountInterface'), require('./model/AccountList'), require('./model/AccountParams'), require('./model/AccountReference'), require('./model/BadCredentialsError'), require('./model/Bank'), require('./model/BankConnection'), require('./model/BankConnectionInterface'), require('./model/BankConnectionList'), require('./model/BankConnectionOwner'), require('./model/BankConsent'), require('./model/BankInterface'), require('./model/BankInterfaceLoginField'), require('./model/BankList'), require('./model/CashFlow'), require('./model/CashFlowList'), require('./model/CategorizationCheckResult'), require('./model/CategorizationCheckResults'), require('./model/Category'), require('./model/CategoryList'), require('./model/CategoryParams'), require('./model/ChangeClientCredentialsParams'), require('./model/CheckCategorizationData'), require('./model/CheckCategorizationTransactionData'), require('./model/ClearingAccountData'), require('./model/ClientConfiguration'), require('./model/ClientConfigurationParams'), require('./model/ConnectInterfaceParams'), require('./model/DailyBalance'), require('./model/DailyBalanceList'), require('./model/DirectDebitOrderingResponse'), require('./model/EditBankConnectionParams'), require('./model/EditCategoryParams'), require('./model/EditTppCredentialParams'), require('./model/ErrorDetails'), require('./model/ErrorMessage'), require('./model/ExecutePasswordChangeParams'), require('./model/ExecuteSepaDirectDebitParams'), require('./model/ExecuteSepaMoneyTransferParams'), require('./model/IbanRule'), require('./model/IbanRuleIdentifiersParams'), require('./model/IbanRuleList'), require('./model/IbanRuleParams'), require('./model/IbanRulesParams'), require('./model/IdentifierList'), require('./model/ImportBankConnectionParams'), require('./model/KeywordRule'), require('./model/KeywordRuleIdentifiersParams'), require('./model/KeywordRuleList'), require('./model/KeywordRuleParams'), require('./model/KeywordRulesParams'), require('./model/Label'), require('./model/LabelList'), require('./model/LabelParams'), require('./model/LoginCredential'), require('./model/LoginCredentialResource'), require('./model/MockAccountData'), require('./model/MockBankConnectionUpdate'), require('./model/MockBatchUpdateParams'), require('./model/MoneyTransferOrderingResponse'), require('./model/MonthlyUserStats'), require('./model/MultiStepAuthenticationCallback'), require('./model/MultiStepAuthenticationChallenge'), require('./model/NewTransaction'), require('./model/NotificationRule'), require('./model/NotificationRuleList'), require('./model/NotificationRuleParams'), require('./model/PageableBankList'), require('./model/PageableCategoryList'), require('./model/PageableIbanRuleList'), require('./model/PageableKeywordRuleList'), require('./model/PageableLabelList'), require('./model/PageablePaymentResources'), require('./model/PageableSecurityList'), require('./model/PageableTppAuthenticationGroupResources'), require('./model/PageableTppCertificateList'), require('./model/PageableTppCredentialResources'), require('./model/PageableTransactionList'), require('./model/PageableUserInfoList'), require('./model/Paging'), require('./model/PasswordChangingResource'), require('./model/Payment'), require('./model/PaymentExecutionResponse'), require('./model/PaypalTransactionData'), require('./model/RemoveInterfaceParams'), require('./model/RequestPasswordChangeParams'), require('./model/RequestSepaDirectDebitParams'), require('./model/RequestSepaMoneyTransferParams'), require('./model/Security'), require('./model/SecurityList'), require('./model/SingleDirectDebitData'), require('./model/SingleMoneyTransferRecipientData'), require('./model/SplitTransactionsParams'), require('./model/SubTransactionParams'), require('./model/TppAuthenticationGroup'), require('./model/TppCertificate'), require('./model/TppCertificateParams'), require('./model/TppCredentials'), require('./model/TppCredentialsParams'), require('./model/TrainCategorizationData'), require('./model/TrainCategorizationTransactionData'), require('./model/Transaction'), require('./model/TransactionList'), require('./model/TriggerCategorizationParams'), require('./model/TwoStepProcedure'), require('./model/UpdateBankConnectionParams'), require('./model/UpdateMultipleTransactionsParams'), require('./model/UpdateResult'), require('./model/UpdateTransactionsParams'), require('./model/User'), require('./model/UserCreateParams'), require('./model/UserIdentifiersList'), require('./model/UserIdentifiersParams'), require('./model/UserInfo'), require('./model/UserUpdateParams'), require('./model/VerificationStatusResource'), require('./model/WebForm'), require('./api/AccountsApi'), require('./api/AuthorizationApi'), require('./api/BankConnectionsApi'), require('./api/BanksApi'), require('./api/CategoriesApi'), require('./api/ClientConfigurationApi'), require('./api/LabelsApi'), require('./api/MandatorAdministrationApi'), require('./api/MocksAndTestsApi'), require('./api/NotificationRulesApi'), require('./api/PaymentsApi'), require('./api/SecuritiesApi'), require('./api/TPPCertificatesApi'), require('./api/TPPCredentialsApi'), require('./api/TransactionsApi'), require('./api/UsersApi'), require('./api/WebFormsApi'));
  }
}(function(ApiClient, AccessToken, Account, AccountInterface, AccountList, AccountParams, AccountReference, BadCredentialsError, Bank, BankConnection, BankConnectionInterface, BankConnectionList, BankConnectionOwner, BankConsent, BankInterface, BankInterfaceLoginField, BankList, CashFlow, CashFlowList, CategorizationCheckResult, CategorizationCheckResults, Category, CategoryList, CategoryParams, ChangeClientCredentialsParams, CheckCategorizationData, CheckCategorizationTransactionData, ClearingAccountData, ClientConfiguration, ClientConfigurationParams, ConnectInterfaceParams, DailyBalance, DailyBalanceList, DirectDebitOrderingResponse, EditBankConnectionParams, EditCategoryParams, EditTppCredentialParams, ErrorDetails, ErrorMessage, ExecutePasswordChangeParams, ExecuteSepaDirectDebitParams, ExecuteSepaMoneyTransferParams, IbanRule, IbanRuleIdentifiersParams, IbanRuleList, IbanRuleParams, IbanRulesParams, IdentifierList, ImportBankConnectionParams, KeywordRule, KeywordRuleIdentifiersParams, KeywordRuleList, KeywordRuleParams, KeywordRulesParams, Label, LabelList, LabelParams, LoginCredential, LoginCredentialResource, MockAccountData, MockBankConnectionUpdate, MockBatchUpdateParams, MoneyTransferOrderingResponse, MonthlyUserStats, MultiStepAuthenticationCallback, MultiStepAuthenticationChallenge, NewTransaction, NotificationRule, NotificationRuleList, NotificationRuleParams, PageableBankList, PageableCategoryList, PageableIbanRuleList, PageableKeywordRuleList, PageableLabelList, PageablePaymentResources, PageableSecurityList, PageableTppAuthenticationGroupResources, PageableTppCertificateList, PageableTppCredentialResources, PageableTransactionList, PageableUserInfoList, Paging, PasswordChangingResource, Payment, PaymentExecutionResponse, PaypalTransactionData, RemoveInterfaceParams, RequestPasswordChangeParams, RequestSepaDirectDebitParams, RequestSepaMoneyTransferParams, Security, SecurityList, SingleDirectDebitData, SingleMoneyTransferRecipientData, SplitTransactionsParams, SubTransactionParams, TppAuthenticationGroup, TppCertificate, TppCertificateParams, TppCredentials, TppCredentialsParams, TrainCategorizationData, TrainCategorizationTransactionData, Transaction, TransactionList, TriggerCategorizationParams, TwoStepProcedure, UpdateBankConnectionParams, UpdateMultipleTransactionsParams, UpdateResult, UpdateTransactionsParams, User, UserCreateParams, UserIdentifiersList, UserIdentifiersParams, UserInfo, UserUpdateParams, VerificationStatusResource, WebForm, AccountsApi, AuthorizationApi, BankConnectionsApi, BanksApi, CategoriesApi, ClientConfigurationApi, LabelsApi, MandatorAdministrationApi, MocksAndTestsApi, NotificationRulesApi, PaymentsApi, SecuritiesApi, TPPCertificatesApi, TPPCredentialsApi, TransactionsApi, UsersApi, WebFormsApi) {
  'use strict';

  /**
   * finAPI_RESTful_Services.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var FinApiResTfulServices = require('index'); // See note below*.
   * var xxxSvc = new FinApiResTfulServices.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new FinApiResTfulServices.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new FinApiResTfulServices.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new FinApiResTfulServices.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version v1.92.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccessToken model constructor.
     * @property {module:model/AccessToken}
     */
    AccessToken: AccessToken,
    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account: Account,
    /**
     * The AccountInterface model constructor.
     * @property {module:model/AccountInterface}
     */
    AccountInterface: AccountInterface,
    /**
     * The AccountList model constructor.
     * @property {module:model/AccountList}
     */
    AccountList: AccountList,
    /**
     * The AccountParams model constructor.
     * @property {module:model/AccountParams}
     */
    AccountParams: AccountParams,
    /**
     * The AccountReference model constructor.
     * @property {module:model/AccountReference}
     */
    AccountReference: AccountReference,
    /**
     * The BadCredentialsError model constructor.
     * @property {module:model/BadCredentialsError}
     */
    BadCredentialsError: BadCredentialsError,
    /**
     * The Bank model constructor.
     * @property {module:model/Bank}
     */
    Bank: Bank,
    /**
     * The BankConnection model constructor.
     * @property {module:model/BankConnection}
     */
    BankConnection: BankConnection,
    /**
     * The BankConnectionInterface model constructor.
     * @property {module:model/BankConnectionInterface}
     */
    BankConnectionInterface: BankConnectionInterface,
    /**
     * The BankConnectionList model constructor.
     * @property {module:model/BankConnectionList}
     */
    BankConnectionList: BankConnectionList,
    /**
     * The BankConnectionOwner model constructor.
     * @property {module:model/BankConnectionOwner}
     */
    BankConnectionOwner: BankConnectionOwner,
    /**
     * The BankConsent model constructor.
     * @property {module:model/BankConsent}
     */
    BankConsent: BankConsent,
    /**
     * The BankInterface model constructor.
     * @property {module:model/BankInterface}
     */
    BankInterface: BankInterface,
    /**
     * The BankInterfaceLoginField model constructor.
     * @property {module:model/BankInterfaceLoginField}
     */
    BankInterfaceLoginField: BankInterfaceLoginField,
    /**
     * The BankList model constructor.
     * @property {module:model/BankList}
     */
    BankList: BankList,
    /**
     * The CashFlow model constructor.
     * @property {module:model/CashFlow}
     */
    CashFlow: CashFlow,
    /**
     * The CashFlowList model constructor.
     * @property {module:model/CashFlowList}
     */
    CashFlowList: CashFlowList,
    /**
     * The CategorizationCheckResult model constructor.
     * @property {module:model/CategorizationCheckResult}
     */
    CategorizationCheckResult: CategorizationCheckResult,
    /**
     * The CategorizationCheckResults model constructor.
     * @property {module:model/CategorizationCheckResults}
     */
    CategorizationCheckResults: CategorizationCheckResults,
    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category: Category,
    /**
     * The CategoryList model constructor.
     * @property {module:model/CategoryList}
     */
    CategoryList: CategoryList,
    /**
     * The CategoryParams model constructor.
     * @property {module:model/CategoryParams}
     */
    CategoryParams: CategoryParams,
    /**
     * The ChangeClientCredentialsParams model constructor.
     * @property {module:model/ChangeClientCredentialsParams}
     */
    ChangeClientCredentialsParams: ChangeClientCredentialsParams,
    /**
     * The CheckCategorizationData model constructor.
     * @property {module:model/CheckCategorizationData}
     */
    CheckCategorizationData: CheckCategorizationData,
    /**
     * The CheckCategorizationTransactionData model constructor.
     * @property {module:model/CheckCategorizationTransactionData}
     */
    CheckCategorizationTransactionData: CheckCategorizationTransactionData,
    /**
     * The ClearingAccountData model constructor.
     * @property {module:model/ClearingAccountData}
     */
    ClearingAccountData: ClearingAccountData,
    /**
     * The ClientConfiguration model constructor.
     * @property {module:model/ClientConfiguration}
     */
    ClientConfiguration: ClientConfiguration,
    /**
     * The ClientConfigurationParams model constructor.
     * @property {module:model/ClientConfigurationParams}
     */
    ClientConfigurationParams: ClientConfigurationParams,
    /**
     * The ConnectInterfaceParams model constructor.
     * @property {module:model/ConnectInterfaceParams}
     */
    ConnectInterfaceParams: ConnectInterfaceParams,
    /**
     * The DailyBalance model constructor.
     * @property {module:model/DailyBalance}
     */
    DailyBalance: DailyBalance,
    /**
     * The DailyBalanceList model constructor.
     * @property {module:model/DailyBalanceList}
     */
    DailyBalanceList: DailyBalanceList,
    /**
     * The DirectDebitOrderingResponse model constructor.
     * @property {module:model/DirectDebitOrderingResponse}
     */
    DirectDebitOrderingResponse: DirectDebitOrderingResponse,
    /**
     * The EditBankConnectionParams model constructor.
     * @property {module:model/EditBankConnectionParams}
     */
    EditBankConnectionParams: EditBankConnectionParams,
    /**
     * The EditCategoryParams model constructor.
     * @property {module:model/EditCategoryParams}
     */
    EditCategoryParams: EditCategoryParams,
    /**
     * The EditTppCredentialParams model constructor.
     * @property {module:model/EditTppCredentialParams}
     */
    EditTppCredentialParams: EditTppCredentialParams,
    /**
     * The ErrorDetails model constructor.
     * @property {module:model/ErrorDetails}
     */
    ErrorDetails: ErrorDetails,
    /**
     * The ErrorMessage model constructor.
     * @property {module:model/ErrorMessage}
     */
    ErrorMessage: ErrorMessage,
    /**
     * The ExecutePasswordChangeParams model constructor.
     * @property {module:model/ExecutePasswordChangeParams}
     */
    ExecutePasswordChangeParams: ExecutePasswordChangeParams,
    /**
     * The ExecuteSepaDirectDebitParams model constructor.
     * @property {module:model/ExecuteSepaDirectDebitParams}
     */
    ExecuteSepaDirectDebitParams: ExecuteSepaDirectDebitParams,
    /**
     * The ExecuteSepaMoneyTransferParams model constructor.
     * @property {module:model/ExecuteSepaMoneyTransferParams}
     */
    ExecuteSepaMoneyTransferParams: ExecuteSepaMoneyTransferParams,
    /**
     * The IbanRule model constructor.
     * @property {module:model/IbanRule}
     */
    IbanRule: IbanRule,
    /**
     * The IbanRuleIdentifiersParams model constructor.
     * @property {module:model/IbanRuleIdentifiersParams}
     */
    IbanRuleIdentifiersParams: IbanRuleIdentifiersParams,
    /**
     * The IbanRuleList model constructor.
     * @property {module:model/IbanRuleList}
     */
    IbanRuleList: IbanRuleList,
    /**
     * The IbanRuleParams model constructor.
     * @property {module:model/IbanRuleParams}
     */
    IbanRuleParams: IbanRuleParams,
    /**
     * The IbanRulesParams model constructor.
     * @property {module:model/IbanRulesParams}
     */
    IbanRulesParams: IbanRulesParams,
    /**
     * The IdentifierList model constructor.
     * @property {module:model/IdentifierList}
     */
    IdentifierList: IdentifierList,
    /**
     * The ImportBankConnectionParams model constructor.
     * @property {module:model/ImportBankConnectionParams}
     */
    ImportBankConnectionParams: ImportBankConnectionParams,
    /**
     * The KeywordRule model constructor.
     * @property {module:model/KeywordRule}
     */
    KeywordRule: KeywordRule,
    /**
     * The KeywordRuleIdentifiersParams model constructor.
     * @property {module:model/KeywordRuleIdentifiersParams}
     */
    KeywordRuleIdentifiersParams: KeywordRuleIdentifiersParams,
    /**
     * The KeywordRuleList model constructor.
     * @property {module:model/KeywordRuleList}
     */
    KeywordRuleList: KeywordRuleList,
    /**
     * The KeywordRuleParams model constructor.
     * @property {module:model/KeywordRuleParams}
     */
    KeywordRuleParams: KeywordRuleParams,
    /**
     * The KeywordRulesParams model constructor.
     * @property {module:model/KeywordRulesParams}
     */
    KeywordRulesParams: KeywordRulesParams,
    /**
     * The Label model constructor.
     * @property {module:model/Label}
     */
    Label: Label,
    /**
     * The LabelList model constructor.
     * @property {module:model/LabelList}
     */
    LabelList: LabelList,
    /**
     * The LabelParams model constructor.
     * @property {module:model/LabelParams}
     */
    LabelParams: LabelParams,
    /**
     * The LoginCredential model constructor.
     * @property {module:model/LoginCredential}
     */
    LoginCredential: LoginCredential,
    /**
     * The LoginCredentialResource model constructor.
     * @property {module:model/LoginCredentialResource}
     */
    LoginCredentialResource: LoginCredentialResource,
    /**
     * The MockAccountData model constructor.
     * @property {module:model/MockAccountData}
     */
    MockAccountData: MockAccountData,
    /**
     * The MockBankConnectionUpdate model constructor.
     * @property {module:model/MockBankConnectionUpdate}
     */
    MockBankConnectionUpdate: MockBankConnectionUpdate,
    /**
     * The MockBatchUpdateParams model constructor.
     * @property {module:model/MockBatchUpdateParams}
     */
    MockBatchUpdateParams: MockBatchUpdateParams,
    /**
     * The MoneyTransferOrderingResponse model constructor.
     * @property {module:model/MoneyTransferOrderingResponse}
     */
    MoneyTransferOrderingResponse: MoneyTransferOrderingResponse,
    /**
     * The MonthlyUserStats model constructor.
     * @property {module:model/MonthlyUserStats}
     */
    MonthlyUserStats: MonthlyUserStats,
    /**
     * The MultiStepAuthenticationCallback model constructor.
     * @property {module:model/MultiStepAuthenticationCallback}
     */
    MultiStepAuthenticationCallback: MultiStepAuthenticationCallback,
    /**
     * The MultiStepAuthenticationChallenge model constructor.
     * @property {module:model/MultiStepAuthenticationChallenge}
     */
    MultiStepAuthenticationChallenge: MultiStepAuthenticationChallenge,
    /**
     * The NewTransaction model constructor.
     * @property {module:model/NewTransaction}
     */
    NewTransaction: NewTransaction,
    /**
     * The NotificationRule model constructor.
     * @property {module:model/NotificationRule}
     */
    NotificationRule: NotificationRule,
    /**
     * The NotificationRuleList model constructor.
     * @property {module:model/NotificationRuleList}
     */
    NotificationRuleList: NotificationRuleList,
    /**
     * The NotificationRuleParams model constructor.
     * @property {module:model/NotificationRuleParams}
     */
    NotificationRuleParams: NotificationRuleParams,
    /**
     * The PageableBankList model constructor.
     * @property {module:model/PageableBankList}
     */
    PageableBankList: PageableBankList,
    /**
     * The PageableCategoryList model constructor.
     * @property {module:model/PageableCategoryList}
     */
    PageableCategoryList: PageableCategoryList,
    /**
     * The PageableIbanRuleList model constructor.
     * @property {module:model/PageableIbanRuleList}
     */
    PageableIbanRuleList: PageableIbanRuleList,
    /**
     * The PageableKeywordRuleList model constructor.
     * @property {module:model/PageableKeywordRuleList}
     */
    PageableKeywordRuleList: PageableKeywordRuleList,
    /**
     * The PageableLabelList model constructor.
     * @property {module:model/PageableLabelList}
     */
    PageableLabelList: PageableLabelList,
    /**
     * The PageablePaymentResources model constructor.
     * @property {module:model/PageablePaymentResources}
     */
    PageablePaymentResources: PageablePaymentResources,
    /**
     * The PageableSecurityList model constructor.
     * @property {module:model/PageableSecurityList}
     */
    PageableSecurityList: PageableSecurityList,
    /**
     * The PageableTppAuthenticationGroupResources model constructor.
     * @property {module:model/PageableTppAuthenticationGroupResources}
     */
    PageableTppAuthenticationGroupResources: PageableTppAuthenticationGroupResources,
    /**
     * The PageableTppCertificateList model constructor.
     * @property {module:model/PageableTppCertificateList}
     */
    PageableTppCertificateList: PageableTppCertificateList,
    /**
     * The PageableTppCredentialResources model constructor.
     * @property {module:model/PageableTppCredentialResources}
     */
    PageableTppCredentialResources: PageableTppCredentialResources,
    /**
     * The PageableTransactionList model constructor.
     * @property {module:model/PageableTransactionList}
     */
    PageableTransactionList: PageableTransactionList,
    /**
     * The PageableUserInfoList model constructor.
     * @property {module:model/PageableUserInfoList}
     */
    PageableUserInfoList: PageableUserInfoList,
    /**
     * The Paging model constructor.
     * @property {module:model/Paging}
     */
    Paging: Paging,
    /**
     * The PasswordChangingResource model constructor.
     * @property {module:model/PasswordChangingResource}
     */
    PasswordChangingResource: PasswordChangingResource,
    /**
     * The Payment model constructor.
     * @property {module:model/Payment}
     */
    Payment: Payment,
    /**
     * The PaymentExecutionResponse model constructor.
     * @property {module:model/PaymentExecutionResponse}
     */
    PaymentExecutionResponse: PaymentExecutionResponse,
    /**
     * The PaypalTransactionData model constructor.
     * @property {module:model/PaypalTransactionData}
     */
    PaypalTransactionData: PaypalTransactionData,
    /**
     * The RemoveInterfaceParams model constructor.
     * @property {module:model/RemoveInterfaceParams}
     */
    RemoveInterfaceParams: RemoveInterfaceParams,
    /**
     * The RequestPasswordChangeParams model constructor.
     * @property {module:model/RequestPasswordChangeParams}
     */
    RequestPasswordChangeParams: RequestPasswordChangeParams,
    /**
     * The RequestSepaDirectDebitParams model constructor.
     * @property {module:model/RequestSepaDirectDebitParams}
     */
    RequestSepaDirectDebitParams: RequestSepaDirectDebitParams,
    /**
     * The RequestSepaMoneyTransferParams model constructor.
     * @property {module:model/RequestSepaMoneyTransferParams}
     */
    RequestSepaMoneyTransferParams: RequestSepaMoneyTransferParams,
    /**
     * The Security model constructor.
     * @property {module:model/Security}
     */
    Security: Security,
    /**
     * The SecurityList model constructor.
     * @property {module:model/SecurityList}
     */
    SecurityList: SecurityList,
    /**
     * The SingleDirectDebitData model constructor.
     * @property {module:model/SingleDirectDebitData}
     */
    SingleDirectDebitData: SingleDirectDebitData,
    /**
     * The SingleMoneyTransferRecipientData model constructor.
     * @property {module:model/SingleMoneyTransferRecipientData}
     */
    SingleMoneyTransferRecipientData: SingleMoneyTransferRecipientData,
    /**
     * The SplitTransactionsParams model constructor.
     * @property {module:model/SplitTransactionsParams}
     */
    SplitTransactionsParams: SplitTransactionsParams,
    /**
     * The SubTransactionParams model constructor.
     * @property {module:model/SubTransactionParams}
     */
    SubTransactionParams: SubTransactionParams,
    /**
     * The TppAuthenticationGroup model constructor.
     * @property {module:model/TppAuthenticationGroup}
     */
    TppAuthenticationGroup: TppAuthenticationGroup,
    /**
     * The TppCertificate model constructor.
     * @property {module:model/TppCertificate}
     */
    TppCertificate: TppCertificate,
    /**
     * The TppCertificateParams model constructor.
     * @property {module:model/TppCertificateParams}
     */
    TppCertificateParams: TppCertificateParams,
    /**
     * The TppCredentials model constructor.
     * @property {module:model/TppCredentials}
     */
    TppCredentials: TppCredentials,
    /**
     * The TppCredentialsParams model constructor.
     * @property {module:model/TppCredentialsParams}
     */
    TppCredentialsParams: TppCredentialsParams,
    /**
     * The TrainCategorizationData model constructor.
     * @property {module:model/TrainCategorizationData}
     */
    TrainCategorizationData: TrainCategorizationData,
    /**
     * The TrainCategorizationTransactionData model constructor.
     * @property {module:model/TrainCategorizationTransactionData}
     */
    TrainCategorizationTransactionData: TrainCategorizationTransactionData,
    /**
     * The Transaction model constructor.
     * @property {module:model/Transaction}
     */
    Transaction: Transaction,
    /**
     * The TransactionList model constructor.
     * @property {module:model/TransactionList}
     */
    TransactionList: TransactionList,
    /**
     * The TriggerCategorizationParams model constructor.
     * @property {module:model/TriggerCategorizationParams}
     */
    TriggerCategorizationParams: TriggerCategorizationParams,
    /**
     * The TwoStepProcedure model constructor.
     * @property {module:model/TwoStepProcedure}
     */
    TwoStepProcedure: TwoStepProcedure,
    /**
     * The UpdateBankConnectionParams model constructor.
     * @property {module:model/UpdateBankConnectionParams}
     */
    UpdateBankConnectionParams: UpdateBankConnectionParams,
    /**
     * The UpdateMultipleTransactionsParams model constructor.
     * @property {module:model/UpdateMultipleTransactionsParams}
     */
    UpdateMultipleTransactionsParams: UpdateMultipleTransactionsParams,
    /**
     * The UpdateResult model constructor.
     * @property {module:model/UpdateResult}
     */
    UpdateResult: UpdateResult,
    /**
     * The UpdateTransactionsParams model constructor.
     * @property {module:model/UpdateTransactionsParams}
     */
    UpdateTransactionsParams: UpdateTransactionsParams,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserCreateParams model constructor.
     * @property {module:model/UserCreateParams}
     */
    UserCreateParams: UserCreateParams,
    /**
     * The UserIdentifiersList model constructor.
     * @property {module:model/UserIdentifiersList}
     */
    UserIdentifiersList: UserIdentifiersList,
    /**
     * The UserIdentifiersParams model constructor.
     * @property {module:model/UserIdentifiersParams}
     */
    UserIdentifiersParams: UserIdentifiersParams,
    /**
     * The UserInfo model constructor.
     * @property {module:model/UserInfo}
     */
    UserInfo: UserInfo,
    /**
     * The UserUpdateParams model constructor.
     * @property {module:model/UserUpdateParams}
     */
    UserUpdateParams: UserUpdateParams,
    /**
     * The VerificationStatusResource model constructor.
     * @property {module:model/VerificationStatusResource}
     */
    VerificationStatusResource: VerificationStatusResource,
    /**
     * The WebForm model constructor.
     * @property {module:model/WebForm}
     */
    WebForm: WebForm,
    /**
     * The AccountsApi service constructor.
     * @property {module:api/AccountsApi}
     */
    AccountsApi: AccountsApi,
    /**
     * The AuthorizationApi service constructor.
     * @property {module:api/AuthorizationApi}
     */
    AuthorizationApi: AuthorizationApi,
    /**
     * The BankConnectionsApi service constructor.
     * @property {module:api/BankConnectionsApi}
     */
    BankConnectionsApi: BankConnectionsApi,
    /**
     * The BanksApi service constructor.
     * @property {module:api/BanksApi}
     */
    BanksApi: BanksApi,
    /**
     * The CategoriesApi service constructor.
     * @property {module:api/CategoriesApi}
     */
    CategoriesApi: CategoriesApi,
    /**
     * The ClientConfigurationApi service constructor.
     * @property {module:api/ClientConfigurationApi}
     */
    ClientConfigurationApi: ClientConfigurationApi,
    /**
     * The LabelsApi service constructor.
     * @property {module:api/LabelsApi}
     */
    LabelsApi: LabelsApi,
    /**
     * The MandatorAdministrationApi service constructor.
     * @property {module:api/MandatorAdministrationApi}
     */
    MandatorAdministrationApi: MandatorAdministrationApi,
    /**
     * The MocksAndTestsApi service constructor.
     * @property {module:api/MocksAndTestsApi}
     */
    MocksAndTestsApi: MocksAndTestsApi,
    /**
     * The NotificationRulesApi service constructor.
     * @property {module:api/NotificationRulesApi}
     */
    NotificationRulesApi: NotificationRulesApi,
    /**
     * The PaymentsApi service constructor.
     * @property {module:api/PaymentsApi}
     */
    PaymentsApi: PaymentsApi,
    /**
     * The SecuritiesApi service constructor.
     * @property {module:api/SecuritiesApi}
     */
    SecuritiesApi: SecuritiesApi,
    /**
     * The TPPCertificatesApi service constructor.
     * @property {module:api/TPPCertificatesApi}
     */
    TPPCertificatesApi: TPPCertificatesApi,
    /**
     * The TPPCredentialsApi service constructor.
     * @property {module:api/TPPCredentialsApi}
     */
    TPPCredentialsApi: TPPCredentialsApi,
    /**
     * The TransactionsApi service constructor.
     * @property {module:api/TransactionsApi}
     */
    TransactionsApi: TransactionsApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi,
    /**
     * The WebFormsApi service constructor.
     * @property {module:api/WebFormsApi}
     */
    WebFormsApi: WebFormsApi
  };

  return exports;
}));
