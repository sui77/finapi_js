/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.92.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FinApiResTfulServices) {
      root.FinApiResTfulServices = {};
    }
    root.FinApiResTfulServices.SubTransactionParams = factory(root.FinApiResTfulServices.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The SubTransactionParams model module.
   * @module model/SubTransactionParams
   * @version v1.92.0
   */

  /**
   * Constructs a new <code>SubTransactionParams</code>.
   * Data of a sub-transaction
   * @alias module:model/SubTransactionParams
   * @class
   * @param amount {Number} Amount
   */
  var exports = function(amount) {
    this.amount = amount;
  };

  /**
   * Constructs a <code>SubTransactionParams</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SubTransactionParams} obj Optional instance to populate.
   * @return {module:model/SubTransactionParams} The populated <code>SubTransactionParams</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('amount'))
        obj.amount = ApiClient.convertToType(data['amount'], 'Number');
      if (data.hasOwnProperty('categoryId'))
        obj.categoryId = ApiClient.convertToType(data['categoryId'], 'Number');
      if (data.hasOwnProperty('purpose'))
        obj.purpose = ApiClient.convertToType(data['purpose'], 'String');
      if (data.hasOwnProperty('counterpart'))
        obj.counterpart = ApiClient.convertToType(data['counterpart'], 'String');
      if (data.hasOwnProperty('counterpartAccountNumber'))
        obj.counterpartAccountNumber = ApiClient.convertToType(data['counterpartAccountNumber'], 'String');
      if (data.hasOwnProperty('counterpartIban'))
        obj.counterpartIban = ApiClient.convertToType(data['counterpartIban'], 'String');
      if (data.hasOwnProperty('counterpartBic'))
        obj.counterpartBic = ApiClient.convertToType(data['counterpartBic'], 'String');
      if (data.hasOwnProperty('counterpartBlz'))
        obj.counterpartBlz = ApiClient.convertToType(data['counterpartBlz'], 'String');
      if (data.hasOwnProperty('labelIds'))
        obj.labelIds = ApiClient.convertToType(data['labelIds'], ['Number']);
    }
    return obj;
  }

  /**
   * Amount
   * @member {Number} amount
   */
  exports.prototype.amount = undefined;

  /**
   * Category identifier. If not specified, the original transaction's category will be applied. If you explicitly want the sub-transaction to have no category, then pass this field with value '0' (zero).
   * @member {Number} categoryId
   */
  exports.prototype.categoryId = undefined;

  /**
   * Purpose. Maximum length is 2000. If not specified, the original transaction's value will be applied.
   * @member {String} purpose
   */
  exports.prototype.purpose = undefined;

  /**
   * Counterpart. Maximum length is 80. If not specified, the original transaction's value will be applied.
   * @member {String} counterpart
   */
  exports.prototype.counterpart = undefined;

  /**
   * Counterpart account number. If not specified, the original transaction's value will be applied.
   * @member {String} counterpartAccountNumber
   */
  exports.prototype.counterpartAccountNumber = undefined;

  /**
   * Counterpart IBAN. If not specified, the original transaction's value will be applied.
   * @member {String} counterpartIban
   */
  exports.prototype.counterpartIban = undefined;

  /**
   * Counterpart BIC. If not specified, the original transaction's value will be applied.
   * @member {String} counterpartBic
   */
  exports.prototype.counterpartBic = undefined;

  /**
   * Counterpart BLZ. If not specified, the original transaction's value will be applied.
   * @member {String} counterpartBlz
   */
  exports.prototype.counterpartBlz = undefined;

  /**
   * List of connected labels. Note that when this field is not specified, then the labels of the original transaction will NOT get applied to the sub-transaction. Instead, the sub-transaction will have no labels assigned to it.
   * @member {Array.<Number>} labelIds
   */
  exports.prototype.labelIds = undefined;

  return exports;

}));
