/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.92.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FinApiResTfulServices) {
      root.FinApiResTfulServices = {};
    }
    root.FinApiResTfulServices.TrainCategorizationTransactionData = factory(root.FinApiResTfulServices.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The TrainCategorizationTransactionData model module.
   * @module model/TrainCategorizationTransactionData
   * @version v1.92.0
   */

  /**
   * Constructs a new <code>TrainCategorizationTransactionData</code>.
   * Transaction data for categorization training
   * @alias module:model/TrainCategorizationTransactionData
   * @class
   * @param accountTypeId {Number} Identifier of account type.<br/><br/>1 = Checking,<br/>2 = Savings,<br/>3 = CreditCard,<br/>4 = Security,<br/>5 = Loan,<br/>6 = Pocket (DEPRECATED; will not be returned for any account unless this type has explicitly been set via PATCH),<br/>7 = Membership,<br/>8 = Bausparen<br/><br/>
   * @param amount {Number} Amount
   */
  var exports = function(accountTypeId, amount) {
    this.accountTypeId = accountTypeId;
    this.amount = amount;
  };

  /**
   * Constructs a <code>TrainCategorizationTransactionData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TrainCategorizationTransactionData} obj Optional instance to populate.
   * @return {module:model/TrainCategorizationTransactionData} The populated <code>TrainCategorizationTransactionData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('accountTypeId'))
        obj.accountTypeId = ApiClient.convertToType(data['accountTypeId'], 'Number');
      if (data.hasOwnProperty('amount'))
        obj.amount = ApiClient.convertToType(data['amount'], 'Number');
      if (data.hasOwnProperty('purpose'))
        obj.purpose = ApiClient.convertToType(data['purpose'], 'String');
      if (data.hasOwnProperty('counterpart'))
        obj.counterpart = ApiClient.convertToType(data['counterpart'], 'String');
      if (data.hasOwnProperty('counterpartIban'))
        obj.counterpartIban = ApiClient.convertToType(data['counterpartIban'], 'String');
      if (data.hasOwnProperty('counterpartAccountNumber'))
        obj.counterpartAccountNumber = ApiClient.convertToType(data['counterpartAccountNumber'], 'String');
      if (data.hasOwnProperty('counterpartBlz'))
        obj.counterpartBlz = ApiClient.convertToType(data['counterpartBlz'], 'String');
      if (data.hasOwnProperty('counterpartBic'))
        obj.counterpartBic = ApiClient.convertToType(data['counterpartBic'], 'String');
      if (data.hasOwnProperty('mcCode'))
        obj.mcCode = ApiClient.convertToType(data['mcCode'], 'String');
    }
    return obj;
  }

  /**
   * Identifier of account type.<br/><br/>1 = Checking,<br/>2 = Savings,<br/>3 = CreditCard,<br/>4 = Security,<br/>5 = Loan,<br/>6 = Pocket (DEPRECATED; will not be returned for any account unless this type has explicitly been set via PATCH),<br/>7 = Membership,<br/>8 = Bausparen<br/><br/>
   * @member {Number} accountTypeId
   */
  exports.prototype.accountTypeId = undefined;

  /**
   * Amount
   * @member {Number} amount
   */
  exports.prototype.amount = undefined;

  /**
   * Purpose. Any symbols are allowed. Maximum length is 2000. Default value: null.
   * @member {String} purpose
   */
  exports.prototype.purpose = undefined;

  /**
   * Counterpart. Any symbols are allowed. Maximum length is 80. Default value: null.
   * @member {String} counterpart
   */
  exports.prototype.counterpart = undefined;

  /**
   * Counterpart IBAN. Default value: null.
   * @member {String} counterpartIban
   */
  exports.prototype.counterpartIban = undefined;

  /**
   * Counterpart account number. Default value: null.
   * @member {String} counterpartAccountNumber
   */
  exports.prototype.counterpartAccountNumber = undefined;

  /**
   * Counterpart BLZ. Default value: null.
   * @member {String} counterpartBlz
   */
  exports.prototype.counterpartBlz = undefined;

  /**
   * Counterpart BIC. Default value: null.
   * @member {String} counterpartBic
   */
  exports.prototype.counterpartBic = undefined;

  /**
   * Merchant category code (for credit card transactions only). Default value: null. NOTE: This field is currently not regarded.
   * @member {String} mcCode
   */
  exports.prototype.mcCode = undefined;

  return exports;

}));
