/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.92.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Category'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Category'));
  } else {
    // Browser globals (root is window)
    if (!root.FinApiResTfulServices) {
      root.FinApiResTfulServices = {};
    }
    root.FinApiResTfulServices.KeywordRule = factory(root.FinApiResTfulServices.ApiClient, root.FinApiResTfulServices.Category);
  }
}(this, function(ApiClient, Category) {
  'use strict';

  /**
   * The KeywordRule model module.
   * @module model/KeywordRule
   * @version v1.92.0
   */

  /**
   * Constructs a new <code>KeywordRule</code>.
   * Container for a keyword rule
   * @alias module:model/KeywordRule
   * @class
   * @param id {Number} Rule identifier
   * @param category {module:model/Category} The category that this rule assigns to the transactions that it matches
   * @param direction {module:model/KeywordRule.DirectionEnum} Direction for the rule. 'Income' means that the rule applies to transactions with a positive amount only, 'Spending' means it applies to transactions with a negative amount only.
   * @param creationDate {String} Timestamp of when the rule was created, in the format 'YYYY-MM-DD HH:MM:SS.SSS' (german time)
   * @param keywords {Array.<String>} Set of keywords that this rule defines.
   */
  var exports = function(id, category, direction, creationDate, keywords) {
    this.id = id;
    this.category = category;
    this.direction = direction;
    this.creationDate = creationDate;
    this.keywords = keywords;
  };

  /**
   * Constructs a <code>KeywordRule</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/KeywordRule} obj Optional instance to populate.
   * @return {module:model/KeywordRule} The populated <code>KeywordRule</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('category'))
        obj.category = Category.constructFromObject(data['category']);
      if (data.hasOwnProperty('direction'))
        obj.direction = ApiClient.convertToType(data['direction'], 'String');
      if (data.hasOwnProperty('creationDate'))
        obj.creationDate = ApiClient.convertToType(data['creationDate'], 'String');
      if (data.hasOwnProperty('keywords'))
        obj.keywords = ApiClient.convertToType(data['keywords'], ['String']);
    }
    return obj;
  }

  /**
   * Rule identifier
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * The category that this rule assigns to the transactions that it matches
   * @member {module:model/Category} category
   */
  exports.prototype.category = undefined;

  /**
   * Direction for the rule. 'Income' means that the rule applies to transactions with a positive amount only, 'Spending' means it applies to transactions with a negative amount only.
   * @member {module:model/KeywordRule.DirectionEnum} direction
   */
  exports.prototype.direction = undefined;

  /**
   * Timestamp of when the rule was created, in the format 'YYYY-MM-DD HH:MM:SS.SSS' (german time)
   * @member {String} creationDate
   */
  exports.prototype.creationDate = undefined;

  /**
   * Set of keywords that this rule defines.
   * @member {Array.<String>} keywords
   */
  exports.prototype.keywords = undefined;


  /**
   * Allowed values for the <code>direction</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DirectionEnum = {
    /**
     * value: "Income"
     * @const
     */
    income: "Income",

    /**
     * value: "Spending"
     * @const
     */
    spending: "Spending"
  };

  return exports;

}));
