/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.92.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FinApiResTfulServices) {
      root.FinApiResTfulServices = {};
    }
    root.FinApiResTfulServices.AccessToken = factory(root.FinApiResTfulServices.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The AccessToken model module.
   * @module model/AccessToken
   * @version v1.92.0
   */

  /**
   * Constructs a new <code>AccessToken</code>.
   * User access token info
   * @alias module:model/AccessToken
   * @class
   * @param tokenType {String} Token type (it's always 'bearer')
   * @param expiresIn {Number} Expiration time in seconds. A value of 0 means that the token never expires (unless it is explicitly invalidated, e.g. by revocation, or when a user gets locked).
   * @param scope {String} Requested scopes (it's always 'all')
   * @param accessToken {String} Access token. Token has a length of up to 128 characters.
   */
  var exports = function(tokenType, expiresIn, scope, accessToken) {
    this.tokenType = tokenType;
    this.expiresIn = expiresIn;
    this.scope = scope;
    this.accessToken = accessToken;
  };

  /**
   * Constructs a <code>AccessToken</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AccessToken} obj Optional instance to populate.
   * @return {module:model/AccessToken} The populated <code>AccessToken</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('token_type'))
        obj.tokenType = ApiClient.convertToType(data['token_type'], 'String');
      if (data.hasOwnProperty('expires_in'))
        obj.expiresIn = ApiClient.convertToType(data['expires_in'], 'Number');
      if (data.hasOwnProperty('scope'))
        obj.scope = ApiClient.convertToType(data['scope'], 'String');
      if (data.hasOwnProperty('refresh_token'))
        obj.refreshToken = ApiClient.convertToType(data['refresh_token'], 'String');
      if (data.hasOwnProperty('access_token'))
        obj.accessToken = ApiClient.convertToType(data['access_token'], 'String');
    }
    return obj;
  }

  /**
   * Token type (it's always 'bearer')
   * @member {String} tokenType
   */
  exports.prototype.tokenType = undefined;

  /**
   * Expiration time in seconds. A value of 0 means that the token never expires (unless it is explicitly invalidated, e.g. by revocation, or when a user gets locked).
   * @member {Number} expiresIn
   */
  exports.prototype.expiresIn = undefined;

  /**
   * Requested scopes (it's always 'all')
   * @member {String} scope
   */
  exports.prototype.scope = undefined;

  /**
   * Refresh token. Only set in case of grant_type='password'. Token has a length of up to 128 characters.
   * @member {String} refreshToken
   */
  exports.prototype.refreshToken = undefined;

  /**
   * Access token. Token has a length of up to 128 characters.
   * @member {String} accessToken
   */
  exports.prototype.accessToken = undefined;

  return exports;

}));
