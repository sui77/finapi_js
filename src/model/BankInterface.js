/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.92.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BankInterfaceLoginField', 'model/TppAuthenticationGroup'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BankInterfaceLoginField'), require('./TppAuthenticationGroup'));
  } else {
    // Browser globals (root is window)
    if (!root.FinApiResTfulServices) {
      root.FinApiResTfulServices = {};
    }
    root.FinApiResTfulServices.BankInterface = factory(root.FinApiResTfulServices.ApiClient, root.FinApiResTfulServices.BankInterfaceLoginField, root.FinApiResTfulServices.TppAuthenticationGroup);
  }
}(this, function(ApiClient, BankInterfaceLoginField, TppAuthenticationGroup) {
  'use strict';

  /**
   * The BankInterface model module.
   * @module model/BankInterface
   * @version v1.92.0
   */

  /**
   * Constructs a new <code>BankInterface</code>.
   * Interface used to connect to a bank
   * @alias module:model/BankInterface
   * @class
   * @param _interface {module:model/BankInterface.InterfaceEnum} Bank interface. Possible values:<br><br>&bull; <code>FINTS_SERVER</code> - means that finAPI will download data via the bank's FinTS server.<br>&bull; <code>WEB_SCRAPER</code> - means that finAPI will parse data from the bank's online banking website.<br>&bull; <code>XS2A</code> - means that finAPI will download data via the bank's XS2A interface.<br>
   * @param loginCredentials {Array.<module:model/BankInterfaceLoginField>} Login credentials fields which should be shown to the user.
   * @param health {Number} The health status of this interface. This is a value between 0 and 100, depicting the percentage of successful communication attempts with the bank via this interface during the latest couple of bank connection imports or updates (across the entire finAPI system). Note that 'successful' means that there was no technical error trying to establish a communication with the bank. Non-technical errors (like incorrect credentials) are regarded successful communication attempts.
   */
  var exports = function(_interface, loginCredentials, health) {
    this._interface = _interface;
    this.loginCredentials = loginCredentials;
    this.health = health;
  };

  /**
   * Constructs a <code>BankInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BankInterface} obj Optional instance to populate.
   * @return {module:model/BankInterface} The populated <code>BankInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('interface'))
        obj._interface = ApiClient.convertToType(data['interface'], 'String');
      if (data.hasOwnProperty('tppAuthenticationGroup'))
        obj.tppAuthenticationGroup = TppAuthenticationGroup.constructFromObject(data['tppAuthenticationGroup']);
      if (data.hasOwnProperty('loginCredentials'))
        obj.loginCredentials = ApiClient.convertToType(data['loginCredentials'], [BankInterfaceLoginField]);
      if (data.hasOwnProperty('properties'))
        obj.properties = ApiClient.convertToType(data['properties'], ['String']);
      if (data.hasOwnProperty('loginHint'))
        obj.loginHint = ApiClient.convertToType(data['loginHint'], 'String');
      if (data.hasOwnProperty('health'))
        obj.health = ApiClient.convertToType(data['health'], 'Number');
      if (data.hasOwnProperty('lastCommunicationAttempt'))
        obj.lastCommunicationAttempt = ApiClient.convertToType(data['lastCommunicationAttempt'], 'String');
      if (data.hasOwnProperty('lastSuccessfulCommunication'))
        obj.lastSuccessfulCommunication = ApiClient.convertToType(data['lastSuccessfulCommunication'], 'String');
    }
    return obj;
  }

  /**
   * Bank interface. Possible values:<br><br>&bull; <code>FINTS_SERVER</code> - means that finAPI will download data via the bank's FinTS server.<br>&bull; <code>WEB_SCRAPER</code> - means that finAPI will parse data from the bank's online banking website.<br>&bull; <code>XS2A</code> - means that finAPI will download data via the bank's XS2A interface.<br>
   * @member {module:model/BankInterface.InterfaceEnum} _interface
   */
  exports.prototype._interface = undefined;

  /**
   * TPP Authentication Group which the bank interface is connected to
   * @member {module:model/TppAuthenticationGroup} tppAuthenticationGroup
   */
  exports.prototype.tppAuthenticationGroup = undefined;

  /**
   * Login credentials fields which should be shown to the user.
   * @member {Array.<module:model/BankInterfaceLoginField>} loginCredentials
   */
  exports.prototype.loginCredentials = undefined;

  /**
   * Set of interface properties/specifics. Possible values:<br><br>&bull; <code>REDIRECT_APPROACH</code> - means that the interface uses a redirect approach when authorizing the user. It requires you to pass the 'redirectUrl' field in all services which define the field. If the user already has imported a bank connection of the same bank that he is about to import, we recommend to confront the user with the question: <blockquote>For the selected bank you have already imported successfully the following accounts: &lt;account list&gt;. Are you sure that you want to import another bank connection from &lt;bank name&gt;? </blockquote>&bull; <code>DECOUPLED_APPROACH</code> - means that the interface uses a decoupled approach when authorizing the user.<br/><br/>&bull; <code>DETAILED_CONSENT</code> - means that the interface requires a list of account references when authorizing the user. It requires you to pass the 'accountReferences' field in all services which define the field.<br/><br/>Note that this set can be empty, if the interface does not have any specific properties.
   * @member {Array.<module:model/BankInterface.PropertiesEnum>} properties
   */
  exports.prototype.properties = undefined;

  /**
   * Login hint. Contains a German message for the user that explains what kind of credentials are expected.<br/><br/>Please note that it is essential to always show the login hint to the user if there is one, as the credentials that finAPI requires for the bank might be different to the credentials that the user knows from his online banking.<br/><br/>Also note that the contents of this field should always be interpreted as HTML, as the text might contain HTML tags for highlighted words, paragraphs, etc.
   * @member {String} loginHint
   */
  exports.prototype.loginHint = undefined;

  /**
   * The health status of this interface. This is a value between 0 and 100, depicting the percentage of successful communication attempts with the bank via this interface during the latest couple of bank connection imports or updates (across the entire finAPI system). Note that 'successful' means that there was no technical error trying to establish a communication with the bank. Non-technical errors (like incorrect credentials) are regarded successful communication attempts.
   * @member {Number} health
   */
  exports.prototype.health = undefined;

  /**
   * Time of the last communication attempt with this interface during an import, update or connect interface (across the entire finAPI system). The value is returned in the format 'YYYY-MM-DD HH:MM:SS.SSS' (german time).
   * @member {String} lastCommunicationAttempt
   */
  exports.prototype.lastCommunicationAttempt = undefined;

  /**
   * Time of the last successful communication with this interface during an import, update or connect interface (across the entire finAPI system). The value is returned in the format 'YYYY-MM-DD HH:MM:SS.SSS' (german time).
   * @member {String} lastSuccessfulCommunication
   */
  exports.prototype.lastSuccessfulCommunication = undefined;


  /**
   * Allowed values for the <code>_interface</code> property.
   * @enum {String}
   * @readonly
   */
  exports.InterfaceEnum = {
    /**
     * value: "WEB_SCRAPER"
     * @const
     */
    WEB_SCRAPER: "WEB_SCRAPER",

    /**
     * value: "FINTS_SERVER"
     * @const
     */
    FINTS_SERVER: "FINTS_SERVER",

    /**
     * value: "XS2A"
     * @const
     */
    xS2A: "XS2A"
  };


  /**
   * Allowed values for the <code>properties</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PropertiesEnum = {
    /**
     * value: "REDIRECT_APPROACH"
     * @const
     */
    REDIRECT_APPROACH: "REDIRECT_APPROACH",

    /**
     * value: "DECOUPLED_APPROACH"
     * @const
     */
    DECOUPLED_APPROACH: "DECOUPLED_APPROACH",

    /**
     * value: "DETAILED_CONSENT"
     * @const
     */
    DETAILED_CONSENT: "DETAILED_CONSENT"
  };

  return exports;

}));
