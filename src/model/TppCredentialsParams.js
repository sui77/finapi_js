/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.92.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FinApiResTfulServices) {
      root.FinApiResTfulServices = {};
    }
    root.FinApiResTfulServices.TppCredentialsParams = factory(root.FinApiResTfulServices.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The TppCredentialsParams model module.
   * @module model/TppCredentialsParams
   * @version v1.92.0
   */

  /**
   * Constructs a new <code>TppCredentialsParams</code>.
   * A container for new TPP client credentials data
   * @alias module:model/TppCredentialsParams
   * @class
   * @param tppAuthenticationGroupId {Number} The TPP Authentication Group Id for which the credentials can be used
   * @param label {String} Optional label to credentials
   */
  var exports = function(tppAuthenticationGroupId, label) {
    this.tppAuthenticationGroupId = tppAuthenticationGroupId;
    this.label = label;
  };

  /**
   * Constructs a <code>TppCredentialsParams</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TppCredentialsParams} obj Optional instance to populate.
   * @return {module:model/TppCredentialsParams} The populated <code>TppCredentialsParams</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('tppAuthenticationGroupId'))
        obj.tppAuthenticationGroupId = ApiClient.convertToType(data['tppAuthenticationGroupId'], 'Number');
      if (data.hasOwnProperty('label'))
        obj.label = ApiClient.convertToType(data['label'], 'String');
      if (data.hasOwnProperty('tppClientId'))
        obj.tppClientId = ApiClient.convertToType(data['tppClientId'], 'String');
      if (data.hasOwnProperty('tppClientSecret'))
        obj.tppClientSecret = ApiClient.convertToType(data['tppClientSecret'], 'String');
      if (data.hasOwnProperty('tppApiKey'))
        obj.tppApiKey = ApiClient.convertToType(data['tppApiKey'], 'String');
      if (data.hasOwnProperty('validFromDate'))
        obj.validFromDate = ApiClient.convertToType(data['validFromDate'], 'String');
      if (data.hasOwnProperty('validUntilDate'))
        obj.validUntilDate = ApiClient.convertToType(data['validUntilDate'], 'String');
    }
    return obj;
  }

  /**
   * The TPP Authentication Group Id for which the credentials can be used
   * @member {Number} tppAuthenticationGroupId
   */
  exports.prototype.tppAuthenticationGroupId = undefined;

  /**
   * Optional label to credentials
   * @member {String} label
   */
  exports.prototype.label = undefined;

  /**
   * ID of the TPP accessing the ASPSP API, as provided by the ASPSP as the result of registration
   * @member {String} tppClientId
   */
  exports.prototype.tppClientId = undefined;

  /**
   * Secret of the TPP accessing the ASPSP API, as provided by the ASPSP as the result of registration
   * @member {String} tppClientSecret
   */
  exports.prototype.tppClientSecret = undefined;

  /**
   * API Key provided by ASPSP  as the result of registration
   * @member {String} tppApiKey
   */
  exports.prototype.tppApiKey = undefined;

  /**
   * Credentials \"valid from\" date in the format 'YYYY-MM-DD'. Default is today's date
   * @member {String} validFromDate
   */
  exports.prototype.validFromDate = undefined;

  /**
   * Credentials \"valid until\" date in the format 'YYYY-MM-DD'. Default is null which means \"indefinite\" (no limit)
   * @member {String} validUntilDate
   */
  exports.prototype.validUntilDate = undefined;

  return exports;

}));
