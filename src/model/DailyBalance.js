/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.92.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FinApiResTfulServices) {
      root.FinApiResTfulServices = {};
    }
    root.FinApiResTfulServices.DailyBalance = factory(root.FinApiResTfulServices.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The DailyBalance model module.
   * @module model/DailyBalance
   * @version v1.92.0
   */

  /**
   * Constructs a new <code>DailyBalance</code>.
   * Balance data for a single day
   * @alias module:model/DailyBalance
   * @class
   * @param _date {String} Date in the format 'YYYY-MM-DD HH:MM:SS.SSS' (german time).
   * @param balance {Number} Calculated balance at the end of day (aggregation of all regarded accounts).
   * @param income {Number} The sum of income of the given day (aggregation of all regarded accounts).
   * @param spending {Number} The sum of spending of the given day (aggregation of all regarded accounts).
   * @param transactions {Array.<Number>} Identifiers of the transactions for the given day
   */
  var exports = function(_date, balance, income, spending, transactions) {
    this._date = _date;
    this.balance = balance;
    this.income = income;
    this.spending = spending;
    this.transactions = transactions;
  };

  /**
   * Constructs a <code>DailyBalance</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DailyBalance} obj Optional instance to populate.
   * @return {module:model/DailyBalance} The populated <code>DailyBalance</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('date'))
        obj._date = ApiClient.convertToType(data['date'], 'String');
      if (data.hasOwnProperty('balance'))
        obj.balance = ApiClient.convertToType(data['balance'], 'Number');
      if (data.hasOwnProperty('income'))
        obj.income = ApiClient.convertToType(data['income'], 'Number');
      if (data.hasOwnProperty('spending'))
        obj.spending = ApiClient.convertToType(data['spending'], 'Number');
      if (data.hasOwnProperty('transactions'))
        obj.transactions = ApiClient.convertToType(data['transactions'], ['Number']);
    }
    return obj;
  }

  /**
   * Date in the format 'YYYY-MM-DD HH:MM:SS.SSS' (german time).
   * @member {String} _date
   */
  exports.prototype._date = undefined;

  /**
   * Calculated balance at the end of day (aggregation of all regarded accounts).
   * @member {Number} balance
   */
  exports.prototype.balance = undefined;

  /**
   * The sum of income of the given day (aggregation of all regarded accounts).
   * @member {Number} income
   */
  exports.prototype.income = undefined;

  /**
   * The sum of spending of the given day (aggregation of all regarded accounts).
   * @member {Number} spending
   */
  exports.prototype.spending = undefined;

  /**
   * Identifiers of the transactions for the given day
   * @member {Array.<Number>} transactions
   */
  exports.prototype.transactions = undefined;

  return exports;

}));
