/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.92.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FinApiResTfulServices) {
      root.FinApiResTfulServices = {};
    }
    root.FinApiResTfulServices.UpdateResult = factory(root.FinApiResTfulServices.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The UpdateResult model module.
   * @module model/UpdateResult
   * @version v1.92.0
   */

  /**
   * Constructs a new <code>UpdateResult</code>.
   * Container for a status of bank connection update
   * @alias module:model/UpdateResult
   * @class
   * @param result {module:model/UpdateResult.ResultEnum} Note that 'OK' just means that finAPI could successfully connect and log in to the bank server. However, it does not necessarily mean that all accounts could be updated successfully. For the latter, please refer to the 'status' field of the Account resource.
   * @param timestamp {String} Time of the update. The value is returned in the format 'YYYY-MM-DD HH:MM:SS.SSS' (german time).
   */
  var exports = function(result, timestamp) {
    this.result = result;
    this.timestamp = timestamp;
  };

  /**
   * Constructs a <code>UpdateResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UpdateResult} obj Optional instance to populate.
   * @return {module:model/UpdateResult} The populated <code>UpdateResult</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('result'))
        obj.result = ApiClient.convertToType(data['result'], 'String');
      if (data.hasOwnProperty('errorMessage'))
        obj.errorMessage = ApiClient.convertToType(data['errorMessage'], 'String');
      if (data.hasOwnProperty('errorType'))
        obj.errorType = ApiClient.convertToType(data['errorType'], 'String');
      if (data.hasOwnProperty('timestamp'))
        obj.timestamp = ApiClient.convertToType(data['timestamp'], 'String');
    }
    return obj;
  }

  /**
   * Note that 'OK' just means that finAPI could successfully connect and log in to the bank server. However, it does not necessarily mean that all accounts could be updated successfully. For the latter, please refer to the 'status' field of the Account resource.
   * @member {module:model/UpdateResult.ResultEnum} result
   */
  exports.prototype.result = undefined;

  /**
   * In case the update result is not <code>OK</code>, this field may contain an error message with details about why the update failed (it is not guaranteed that a message is available though). In case the update result is <code>OK</code>, the field will always be null.
   * @member {String} errorMessage
   */
  exports.prototype.errorMessage = undefined;

  /**
   * In case the update result is not <code>OK</code>, this field contains the type of the error that occurred. BUSINESS means that the bank server responded with a non-technical error message for the user. TECHNICAL means that some internal error has occurred in finAPI or at the bank server.
   * @member {module:model/UpdateResult.ErrorTypeEnum} errorType
   */
  exports.prototype.errorType = undefined;

  /**
   * Time of the update. The value is returned in the format 'YYYY-MM-DD HH:MM:SS.SSS' (german time).
   * @member {String} timestamp
   */
  exports.prototype.timestamp = undefined;


  /**
   * Allowed values for the <code>result</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ResultEnum = {
    /**
     * value: "OK"
     * @const
     */
    OK: "OK",

    /**
     * value: "BANK_SERVER_REJECTION"
     * @const
     */
    BANK_SERVER_REJECTION: "BANK_SERVER_REJECTION",

    /**
     * value: "INTERNAL_SERVER_ERROR"
     * @const
     */
    INTERNAL_SERVER_ERROR: "INTERNAL_SERVER_ERROR"
  };


  /**
   * Allowed values for the <code>errorType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ErrorTypeEnum = {
    /**
     * value: "BUSINESS"
     * @const
     */
    BUSINESS: "BUSINESS",

    /**
     * value: "TECHNICAL"
     * @const
     */
    TECHNICAL: "TECHNICAL"
  };

  return exports;

}));
