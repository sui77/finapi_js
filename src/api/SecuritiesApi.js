/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.92.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BadCredentialsError', 'model/ErrorMessage', 'model/PageableSecurityList', 'model/Security', 'model/SecurityList'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BadCredentialsError'), require('../model/ErrorMessage'), require('../model/PageableSecurityList'), require('../model/Security'), require('../model/SecurityList'));
  } else {
    // Browser globals (root is window)
    if (!root.FinApiResTfulServices) {
      root.FinApiResTfulServices = {};
    }
    root.FinApiResTfulServices.SecuritiesApi = factory(root.FinApiResTfulServices.ApiClient, root.FinApiResTfulServices.BadCredentialsError, root.FinApiResTfulServices.ErrorMessage, root.FinApiResTfulServices.PageableSecurityList, root.FinApiResTfulServices.Security, root.FinApiResTfulServices.SecurityList);
  }
}(this, function(ApiClient, BadCredentialsError, ErrorMessage, PageableSecurityList, Security, SecurityList) {
  'use strict';

  /**
   * Securities service.
   * @module api/SecuritiesApi
   * @version v1.92.0
   */

  /**
   * Constructs a new SecuritiesApi. 
   * @alias module:api/SecuritiesApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getAndSearchAllSecurities operation.
     * @callback module:api/SecuritiesApi~getAndSearchAllSecuritiesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageableSecurityList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get and search all securities
     * Get securities of the user that is authorized by the access_token. Must pass the user's access_token. You can set optional search criteria to get only those securities that you are interested in. If you do not specify any search criteria, then this service functions as a 'get all' service.<p>Note: Whenever a security account is being updated, its security positions will be internally re-created, meaning that the identifier of a security position might change over time.</p>
     * @param {Object} opts Optional parameters
     * @param {Array.<Number>} opts.ids A comma-separated list of security identifiers. If specified, then only securities whose identifier match any of the given identifiers will be regarded. The maximum number of identifiers is 1000.
     * @param {String} opts.search If specified, then only those securities will be contained in the result whose 'name', 'isin' or 'wkn' contains the given search string (the matching works case-insensitive). If no securities contain the search string in any of these fields, then the result will be an empty list. NOTE: If the given search string consists of several terms (separated by whitespace), then ALL of these terms must be contained in the searched fields in order for a security to get included into the result.
     * @param {Array.<Number>} opts.accountIds Comma-separated list of identifiers of accounts
     * @param {Number} opts.page Result page that you want to retrieve. (default to 1)
     * @param {Number} opts.perPage Maximum number of records per page. By default it's 20. Can be at most 500. NOTE: Due to its validation and visualization, the swagger frontend might show very low performance, or even crashes, when a service responds with a lot of data. It is recommended to use a HTTP client like Postman or DHC instead of our swagger frontend for service calls with large page sizes. (default to 20)
     * @param {Array.<String>} opts.order Determines the order of the results. You can order the results by next fields: 'id', 'name', 'isin', 'wkn', 'quote', 'quantityNominal', 'marketValue' and 'entryQuote'. The default order for all services is 'id,asc'. You can also order by multiple properties. In that case the order of the parameters passed is important. The general format is: 'property[,asc|desc]', with 'asc' being the default value. Please note that ordering by multiple fields is not supported in our swagger frontend, but you can test this feature with any HTTP tool of your choice (e.g. postman or DHC). 
     * @param {module:api/SecuritiesApi~getAndSearchAllSecuritiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageableSecurityList}
     */
    this.getAndSearchAllSecurities = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'search': opts['search'],
        'page': opts['page'],
        'perPage': opts['perPage'],
      };
      var collectionQueryParams = {
        'ids': {
          value: opts['ids'],
          collectionFormat: 'multi'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'multi'
        },
        'order': {
          value: opts['order'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['finapi_auth'];
      var contentTypes = [];
      var accepts = [];
      var returnType = PageableSecurityList;

      return this.apiClient.callApi(
        '/api/v1/securities', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getMultipleSecurities operation.
     * @callback module:api/SecuritiesApi~getMultipleSecuritiesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get multiple securities
     * Get a list of multiple securities of the user that is authorized by the access_token. Must pass the securities' identifiers and the user's access_token. Securities whose identifiers do not exist or do not relate to the authorized user will not be contained in the result (If this applies to all of the given identifiers, then the result will be an empty list). <p>Note: Whenever a security account is being updated, its security positions will be internally re-created, meaning that the identifier of a security position might change over time.</p><p>WARNING: This service is deprecated and will be removed at some point. If you want to get multiple securities, please instead use the service 'Get and search all securities' and pass a comma-separated list of identifiers as a parameter 'ids'.</p>
     * @param {Array.<Number>} ids Comma-separated list of identifiers of requested securities
     * @param {module:api/SecuritiesApi~getMultipleSecuritiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityList}
     */
    this.getMultipleSecurities = function(ids, callback) {
      var postBody = null;

      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling getMultipleSecurities");
      }


      var pathParams = {
        'ids': ids
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['finapi_auth'];
      var contentTypes = [];
      var accepts = [];
      var returnType = SecurityList;

      return this.apiClient.callApi(
        '/api/v1/securities/{ids}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getSecurity operation.
     * @callback module:api/SecuritiesApi~getSecurityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Security} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a security
     * Get a single security for a specific user. Must pass the security's identifier and the user's access_token. <p>Note: Whenever a security account is being updated, its security positions will be internally re-created, meaning that the identifier of a security position might change over time.</p>
     * @param {Number} id Security identifier
     * @param {module:api/SecuritiesApi~getSecurityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Security}
     */
    this.getSecurity = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getSecurity");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['finapi_auth'];
      var contentTypes = [];
      var accepts = [];
      var returnType = Security;

      return this.apiClient.callApi(
        '/api/v1/securities/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
