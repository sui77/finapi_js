/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.92.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BadCredentialsError', 'model/EditTppCredentialParams', 'model/ErrorMessage', 'model/PageableTppAuthenticationGroupResources', 'model/PageableTppCredentialResources', 'model/TppCredentials', 'model/TppCredentialsParams'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BadCredentialsError'), require('../model/EditTppCredentialParams'), require('../model/ErrorMessage'), require('../model/PageableTppAuthenticationGroupResources'), require('../model/PageableTppCredentialResources'), require('../model/TppCredentials'), require('../model/TppCredentialsParams'));
  } else {
    // Browser globals (root is window)
    if (!root.FinApiResTfulServices) {
      root.FinApiResTfulServices = {};
    }
    root.FinApiResTfulServices.TPPCredentialsApi = factory(root.FinApiResTfulServices.ApiClient, root.FinApiResTfulServices.BadCredentialsError, root.FinApiResTfulServices.EditTppCredentialParams, root.FinApiResTfulServices.ErrorMessage, root.FinApiResTfulServices.PageableTppAuthenticationGroupResources, root.FinApiResTfulServices.PageableTppCredentialResources, root.FinApiResTfulServices.TppCredentials, root.FinApiResTfulServices.TppCredentialsParams);
  }
}(this, function(ApiClient, BadCredentialsError, EditTppCredentialParams, ErrorMessage, PageableTppAuthenticationGroupResources, PageableTppCredentialResources, TppCredentials, TppCredentialsParams) {
  'use strict';

  /**
   * TPPCredentials service.
   * @module api/TPPCredentialsApi
   * @version v1.92.0
   */

  /**
   * Constructs a new TPPCredentialsApi. 
   * @alias module:api/TPPCredentialsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createTppCredential operation.
     * @callback module:api/TPPCredentialsApi~createTppCredentialCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TppCredentials} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create new TPP credentials
     * Upload TPP credentials for a TPP Authentication Group. Must pass the <a href='https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client' target='_blank'>mandator admin client</a>'s access_token.
     * @param {module:model/TppCredentialsParams} body Parameters of a new set of TPP credentials
     * @param {module:api/TPPCredentialsApi~createTppCredentialCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TppCredentials}
     */
    this.createTppCredential = function(body, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createTppCredential");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['finapi_auth'];
      var contentTypes = [];
      var accepts = [];
      var returnType = TppCredentials;

      return this.apiClient.callApi(
        '/api/v1/tppCredentials', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteTppCredential operation.
     * @callback module:api/TPPCredentialsApi~deleteTppCredentialCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a set of TPP credentials
     * Delete a single set of TPP credentials by its id. Must pass the <a href='https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client' target='_blank'>mandator admin client</a>'s access_token.
     * @param {Number} id Id of the TPP credentials to delete
     * @param {module:api/TPPCredentialsApi~deleteTppCredentialCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteTppCredential = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteTppCredential");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['finapi_auth'];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/v1/tppCredentials/{id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the editTppCredential operation.
     * @callback module:api/TPPCredentialsApi~editTppCredentialCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TppCredentials} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit a set of TPP credentials
     * Edit TPP credentials data. Must pass the <a href='https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client' target='_blank'>mandator admin client</a>'s access_token.
     * @param {Number} id Id of the TPP credentials to edit
     * @param {module:model/EditTppCredentialParams} body New TPP credentials parameters
     * @param {module:api/TPPCredentialsApi~editTppCredentialCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TppCredentials}
     */
    this.editTppCredential = function(id, body, callback) {
      var postBody = body;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling editTppCredential");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling editTppCredential");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['finapi_auth'];
      var contentTypes = [];
      var accepts = [];
      var returnType = TppCredentials;

      return this.apiClient.callApi(
        '/api/v1/tppCredentials/{id}', 'PATCH',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllTppCredentials operation.
     * @callback module:api/TPPCredentialsApi~getAllTppCredentialsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageableTppCredentialResources} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all TPP credentials
     * Get and search all TPP credentials. Must pass the <a href='https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client' target='_blank'>mandator admin client</a>'s access_token. You can set optional search criteria to get only those TPP credentials that you are interested in. If you do not specify any search criteria, then this service functions as a 'get all' service.
     * @param {Object} opts Optional parameters
     * @param {String} opts.search Returns only the TPP credentials belonging to those banks whose 'name', 'blz', or 'bic' contains the given search string (the matching works case-insensitive). Note: If the given search string consists of several terms (separated by whitespace), then ALL of these terms must apply to a bank in order for it to get included into the result.
     * @param {Number} opts.page Result page that you want to retrieve (default to 1)
     * @param {Number} opts.perPage Maximum number of records per page. By default it's 20. Can be at most 500. NOTE: Due to its validation and visualization, the swagger frontend might show very low performance, or even crashes, when a service responds with a lot of data. It is recommended to use a HTTP client like Postman or DHC instead of our swagger frontend for service calls with large page sizes. (default to 20)
     * @param {module:api/TPPCredentialsApi~getAllTppCredentialsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageableTppCredentialResources}
     */
    this.getAllTppCredentials = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'search': opts['search'],
        'page': opts['page'],
        'perPage': opts['perPage'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['finapi_auth'];
      var contentTypes = [];
      var accepts = [];
      var returnType = PageableTppCredentialResources;

      return this.apiClient.callApi(
        '/api/v1/tppCredentials', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAndSearchTppAuthenticationGroups operation.
     * @callback module:api/TPPCredentialsApi~getAndSearchTppAuthenticationGroupsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageableTppAuthenticationGroupResources} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all TPP Authentication Groups
     * Get and search across all available TPP authentication groups. Must pass the <a href='https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client' target='_blank'>mandator admin client</a>'s access_token. You can set optional search criteria to get only those TPP authentication groups that you are interested in. If you do not specify any search criteria, then this service functions as a 'get all' service.
     * @param {Object} opts Optional parameters
     * @param {Array.<Number>} opts.ids A comma-separated list of TPP authentication group identifiers. If specified, then only TPP authentication groups whose identifier match any of the given identifiers will be regarded. The maximum number of identifiers is 1000.
     * @param {String} opts.name Only the tpp authentication groups with name matching the given one should appear in the result list
     * @param {String} opts.bankBlz Search by connected banks: only the banks with BLZ matching the given one should appear in the result list
     * @param {String} opts.bankName Search by connected banks: only the banks with name matching the given one should appear in the result list
     * @param {Number} opts.page Result page that you want to retrieve (default to 1)
     * @param {Number} opts.perPage Maximum number of records per page. By default it's 20. Can be at most 500. NOTE: Due to its validation and visualization, the swagger frontend might show very low performance, or even crashes, when a service responds with a lot of data. It is recommended to use a HTTP client like Postman or DHC instead of our swagger frontend for service calls with large page sizes. (default to 20)
     * @param {module:api/TPPCredentialsApi~getAndSearchTppAuthenticationGroupsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageableTppAuthenticationGroupResources}
     */
    this.getAndSearchTppAuthenticationGroups = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'name': opts['name'],
        'bankBlz': opts['bankBlz'],
        'bankName': opts['bankName'],
        'page': opts['page'],
        'perPage': opts['perPage'],
      };
      var collectionQueryParams = {
        'ids': {
          value: opts['ids'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['finapi_auth'];
      var contentTypes = [];
      var accepts = [];
      var returnType = PageableTppAuthenticationGroupResources;

      return this.apiClient.callApi(
        '/api/v1/tppCredentials/tppAuthenticationGroups', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getTppCredential operation.
     * @callback module:api/TPPCredentialsApi~getTppCredentialCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TppCredentials} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a set of TPP credentials
     * Get a single set of TPP credentials by its id. Must pass the <a href='https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client' target='_blank'>mandator admin client</a>'s access_token.
     * @param {Number} id Id of the requested TPP credentials
     * @param {module:api/TPPCredentialsApi~getTppCredentialCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TppCredentials}
     */
    this.getTppCredential = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getTppCredential");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['finapi_auth'];
      var contentTypes = [];
      var accepts = [];
      var returnType = TppCredentials;

      return this.apiClient.callApi(
        '/api/v1/tppCredentials/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
