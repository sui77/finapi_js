/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.92.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FinApiResTfulServices);
  }
}(this, function(expect, FinApiResTfulServices) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FinApiResTfulServices.WebFormsApi();
  });

  describe('(package)', function() {
    describe('WebFormsApi', function() {
      describe('getWebForm', function() {
        it('should call getWebForm successfully', function(done) {
          // TODO: uncomment, update parameter values for getWebForm call and complete the assertions
          /*
          var id = 789;

          instance.getWebForm(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FinApiResTfulServices.WebForm);
            expect(data.id).to.be.a('number');
            expect(data.id).to.be(1);
            expect(data.token).to.be.a('string');
            expect(data.token).to.be("03FhQiom8CJUL7rkRgBMCOF9KXlGL9p7kPpW4puMKDD5QbeRm9E9Vzr1xBcokaxZt5PGRscn8HI8xuL8voLkirocxgFIF7wU8B240R5ccSjfPru9vXTBHBEycmBs8Rk2");
            expect(data.status).to.be.a('string');
            expect(data.status).to.be("COMPLETED");
            expect(data.serviceResponseCode).to.be.a('number');
            expect(data.serviceResponseCode).to.be(201);
            expect(data.serviceResponseBody).to.be.a('string');
            expect(data.serviceResponseBody).to.be("{
  "id": 5,
  "bankId": 277672,
  "name": null,
  "bankingUserId": null,
  "bankingCustomerId": null,
  "bankingPin": null,
  "type": "DEMO",
  "updateStatus": "IN_PROGRESS",
  "categorizationStatus": "READY",
  "lastManualUpdate": null,
  "lastAutoUpdate": null,
  "ibanOnlyMoneyTransferSupported": false,
  "ibanOnlyDirectDebitSupported": false,
  "collectiveMoneyTransferSupported": false,
  "defaultTwoStepProcedureId": null,
  "twoStepProcedures": [],
  "interfaces": [
 {
 "interface": "XS2A",
 "loginCredentials": [
{
  "label": "PSU-ID",
  "value": "XXXXX"
},
{
  "label": "Passwort",
  "value": null
}
 ],
 "defaultTwoStepProcedureId": null,
 "twoStepProcedures": [
{
  "procedureId": "DEMO-TSP-01",
  "procedureName": "SMS",
  "procedureChallengeType": "TEXT",
  "implicitExecute": false
},
{
  "procedureId": "DEMO-TSP-02",
  "procedureName": "PUSH",
"procedureChallengeType": "TEXT",
  "implicitExecute": false
}
 ],
 "aisConsent": {
"status": "NOT_PRESENT",
"expiresAt": null
  },
  "lastManualUpdate": null,
  "lastAutoUpdate": null
}
  ],
  "accountIds": [
 5
  ],
  "owners": null,
  "furtherLoginNotRecommended": false,
  "bank": {
"id": 277672,
"name": "FinAPI Test Bank",
"loginHint": null,
"bic": null,
"blzs": [
  "00000000"
],
"blz": "00000000",
"location": null,
"city": null,
"isSupported": true,
"isTestBank": true,
"popularity": 1,
"health": 100,
"loginFieldUserId": "Onlinebanking-ID",
"loginFieldCustomerId": null,
"loginFieldPin": "PIN",
"pinsAreVolatile": false,
"isCustomerIdPassword": false,
"supportedDataSources": [
  "FINTS_SERVER"
],
"interfaces": [
  {
"interface": "FINTS_SERVER",
"tppAuthenticationGroup": null,
"loginCredentials":[
  {
"label": "Onlinebanking-ID",
"isSecret": false,
"isVolatile": false
  },
{
"label": "PIN",
"isSecret": true,
"isVolatile": false
  }
],
"properties": [],
"loginHint": null
  },
  {
"interface": "XS2A",
"tppAuthenticationGroup": null,
"loginCredentials": [
  {
"label": "PSU-ID",
"isSecret": false,
"isVolatile": false
  },
  {
"label": "Passwort",
 "isSecret": true,
"isVolatile": false
  }
],
"properties": [],
"loginHint": null
  }
],
"lastCommunicationAttempt": "2019-08-30 06:10:55.000",
"lastSuccessfulCommunication": "2019-08-30 06:10:55.000"
  }
}");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
