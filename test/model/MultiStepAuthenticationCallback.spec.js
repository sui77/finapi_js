/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.92.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FinApiResTfulServices);
  }
}(this, function(expect, FinApiResTfulServices) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('MultiStepAuthenticationCallback', function() {
      beforeEach(function() {
        instance = new FinApiResTfulServices.MultiStepAuthenticationCallback();
      });

      it('should create an instance of MultiStepAuthenticationCallback', function() {
        // TODO: update the code to test MultiStepAuthenticationCallback
        expect(instance).to.be.a(FinApiResTfulServices.MultiStepAuthenticationCallback);
      });

      it('should have the property hash (base name: "hash")', function() {
        // TODO: update the code to test the property hash
        expect(instance).to.have.property('hash');
        // expect(instance.hash).to.be(expectedValueLiteral);
      });

      it('should have the property challengeResponse (base name: "challengeResponse")', function() {
        // TODO: update the code to test the property challengeResponse
        expect(instance).to.have.property('challengeResponse');
        // expect(instance.challengeResponse).to.be(expectedValueLiteral);
      });

      it('should have the property twoStepProcedureId (base name: "twoStepProcedureId")', function() {
        // TODO: update the code to test the property twoStepProcedureId
        expect(instance).to.have.property('twoStepProcedureId');
        // expect(instance.twoStepProcedureId).to.be(expectedValueLiteral);
      });

      it('should have the property redirectCallback (base name: "redirectCallback")', function() {
        // TODO: update the code to test the property redirectCallback
        expect(instance).to.have.property('redirectCallback');
        // expect(instance.redirectCallback).to.be(expectedValueLiteral);
      });

      it('should have the property decoupledCallback (base name: "decoupledCallback")', function() {
        // TODO: update the code to test the property decoupledCallback
        expect(instance).to.have.property('decoupledCallback');
        // expect(instance.decoupledCallback).to.be(expectedValueLiteral);
      });

    });
  });

}));
